import React from "react"; import { useTranslation } from "react-i18next"; import { Globe } from "lucide-react"; const LanguageSwitcher: React.FC = () => { const { i18n } = useTranslation(); const [isOpen, setIsOpen] = React.useState(false); const languages = [ { code: "en", name: "English", flag: "ðŸ‡ºðŸ‡¸" }, { code: "ko", name: "í•œêµ­ì–´", flag: "ðŸ‡°ðŸ‡·" }, { code: "ja", name: "æ—¥æœ¬èªž", flag: "ðŸ‡¯ðŸ‡µ" }, ]; const currentLanguage = languages.find(lang => lang.code === i18n.language) || languages[0]; const changeLanguage = (languageCode: string) => { i18n.changeLanguage(languageCode); localStorage.setItem("preferred-language", languageCode); setIsOpen(false); }; return ( <div className="relative"> <button onClick={() => setIsOpen(!isOpen)} className="flex items-center space-x-2 px-3 py-2 rounded-md text-sm font-medium text-slate-300 hover:text-white hover:bg-slate-700 transition-colors" > <Globe className="w-4 h-4" /> <span>{currentLanguage.flag}</span> </button> {isOpen && ( <div className="absolute right-0 mt-2 w-48 bg-slate-800 rounded-md shadow-lg py-1 z-50 border border-slate-700"> {languages.map((language) => ( <button key={language.code} onClick={() => changeLanguage(language.code)} className={`block w-full text-left px-4 py-2 text-sm transition-colors ${
        language.code === i18n.language
          ? "text-green-400 bg-slate-700"
          : "text-slate-300 hover:bg-slate-700 hover:text-white"
      }`} > <span className="mr-2">{language.flag}</span> {language.name} </button> ))} </div> )} </div> ); }; export default LanguageSwitcher;
